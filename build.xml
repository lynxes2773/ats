<project name="ats" default="compile" basedir=".">
	<!-- Global properties -->
	<property file="ant.properties"/>
	
	<!-- Jar classpath declaration -->
	<path id="project.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
		</fileset>	
	</path>	

   <!-- Tomcat classpath declaration -->	
   <path id="catalina-ant-classpath">
        <!-- We need the Catalina jars for Tomcat -->
        <!--  * for other app servers - check the docs -->
        <fileset dir="${appserver.lib}">
            <include name="catalina-ant.jar"/>
        	<include name="tomcat-coyote.jar"/>
            <include name="tomcat-util.jar"/>
        </fileset>
    </path>
	
    <taskdef name="deploy" classname="org.apache.catalina.ant.DeployTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
    <taskdef name="undeploy" classname="org.apache.catalina.ant.UndeployTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>	<taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
    <taskdef name="list" classname="org.apache.catalina.ant.ListTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
    <taskdef name="start" classname="org.apache.catalina.ant.StartTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
    <taskdef name="stop" classname="org.apache.catalina.ant.StopTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>

	
	<!-- Useful shortcuts -->
	<patternset id="meta.files">
		<include name="**/*.xml"/>
		<include name="**/*.properties"/>
	</patternset>
	
	<!-- Clean up -->
	<target name="clean" description="Cleanup build and distribution directories">
		<delete dir="${build.dir}"/>
		<mkdir dir="${build.dir}"/>
		<delete dir="${dist.dir}"/>
		<mkdir dir="${dist.dir}"/>
	</target>
	
	<!-- Compile Java source -->	
	<target name="compile" depends="clean" description="Compile Java source">
		<javac
			srcdir="${src.java.dir}"
			destdir="${build.dir}"
			nowarn="on">
			<classpath refid="project.classpath"/>
		</javac>
	</target>
	
	<target name="test" depends="compile" description="Run tests">
		<junit printsummary="on"
			fork="false"
			haltonfailure="yes"
			failureproperty="tests.failed"
			showoutput="false">
			<formatter type="brief" usefile="false"/>
            <batchtest>
                <fileset dir="${build.dir}">
                    <include name="**/*Test.*"/>
                </fileset>
            </batchtest>			
			<classpath>
				<pathelement location="${build.dir}"/>
			</classpath>
			<classpath refid="project.classpath"/>
		</junit>
		
        <fail if="tests.failed">
            tests.failed=${tests.failed}
            ***********************************************************
            ***********************************************************
            ****  One or more tests failed!  Check the output ...  ****
            ***********************************************************
            ***********************************************************
        </fail>
	</target>
	

	<!-- Copy metadata to build classpath -->
	<target name="copymetafiles" description="Copy Meta Files">
		<copy todir="${build.dir}">
			<fileset dir="${src.java.dir}">
				<patternset refid="meta.files"/>
			</fileset>
		</copy>
	</target>
	
	
	
	<!-- Build ATS Application Jar file -->
	<target name="buildATSJar" depends="compile" description="Build application jar file">
		<jar destfile="${dist.dir}/${name}.jar" basedir="${build.dir}">
			<fileset dir="${build.dir}">
				<exclude name="example/**/*.*"/>
			</fileset>
			<fileset dir="${src.java.dir}">
				<include name="Candidate.hbm.xml"/>
				<include name="Application.hbm.xml"/>
				<include name="ApplicationAttachment.hbm.xml"/>
				<include name="ApplicationComment.hbm.xml"/>
				<include name="ApplicationContact.hbm.xml"/>
				<include name="ApplicationStatusType.hbm.xml"/>
				<include name="AttachmentType.hbm.xml"/>
				<include name="JobSourceType.hbm.xml"/>
				<include name="PositionType.hbm.xml"/>
				<include name="ats.cfg.xml"/>
				<include name="log4j2.xml"/>
			</fileset>
			<zipgroupfileset dir="${lib.dir}" includes="**/*.jar" />
			<manifest>
	            <attribute name="Main-Class" value="example.hibernate.CandidateManager" />
			</manifest>
		</jar>
	</target>
	
	<!-- Build ATS Application War File -->
	<target name="buildATSWar" depends="compile" description="Build application war file">
		<war destfile="${dist.dir}/${name}.war" webxml="${web.dir}/WEB-INF/web.xml">
			<fileset dir="${basedir}">
				<include name="**/resources/i18/*.properties"/>
				<include name="**/resources/config/*.properties"/>
			</fileset>			
			<fileset dir="${web.dir}">
				<include name="**/resources/jsp/*.jsp"/>
				<include name="**/resources/tld/*.tld"/>
				<include name="**/resources/scripts/*.js"/>
				<include name="**/resources/scripts/**/*.js"/>
				<include name="**/resources/images/*.*"/>
				<include name="**/index.html"/>
				<include name="**/dispatcher-servlet.xml"/>
				<include name="**/*.css"/>
				<include name="**/*.MF"/>
			</fileset>
			<lib dir="${lib.dir}">
				<include name="*.jar"/>
			</lib>
			<classes dir="${build.dir}">
				<include name="**/*.class"/>
			</classes>
		</war>
		<copy todir="${tomcat.deploy.dir}">
		    <fileset dir="${dist.dir}">
				<include name="ats.war"/>
		    </fileset>	
		</copy>
	</target>
	
	<!-- Commands for Hibernate Only Java Application -->
	<target name="buildHibernateOnlyJar" depends="compile">
		<jar destfile="${dist.dir}/hibernate-example.jar" basedir="${build.dir}">
			<fileset dir="${build.dir}">
				<exclude name="ats/**/*.*"/>
			</fileset>
			<fileset dir="${src.java.dir}">
				<include name="Candidate.hbm.xml"/>
				<include name="hibernateonly.cfg.xml"/>
				<include name="log4j2.xml"/>
			</fileset>
			<zipgroupfileset dir="${lib.dir}">
				<include name="antlr-2.7.7.jar"/>
				<include name="c3p0-0.9.1-pre6.jar"/> 
				<include name="cdi-api-1.1.jar"/> 
				<include name="classmate-1.3.0.jar"/> 
				<include name="dom4j-1.6.1.jar"/> 
				<include name="el-api-2.2.jar"/>
				<include name="geronimo-jta_1.1_spec-1.1.1.jar"/>	            	
				<include name="hibernate-c3p0-5.2.4.Final.jar"/>
				<include name="hibernate-commons-annotations-5.0.1.Final.jar"/>
				<include name="hibernate-core-5.2.4.Final.jar"/>	            	
				<include name="hibernate-jpa-2.1-api-1.0.0.Final.jar"/>	            	
				<include name="hibernate-jpamodelgen-5.2.4.Final.jar"/>	            	
				<include name="jandex-2.0.0.Final.jar"/>
				<include name="javassist-3.20.0-GA.jar"/>
				<include name="javax.inject-1.jar"/>
				<include name="jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar"/>
				<include name="jboss-logging-3.3.0.Final.jar"/>
				<include name="jsr250-api-1.0.jar"/>
				<include name="log4j-api-2.7.jar"/>
				<include name="log4j-core-2.7.jar"/>
				<include name="mysql-connector-java-5.1.40-bin.jar"/>
				<include name="slf4j-api-1.6.1.jar"/>
			</zipgroupfileset>	
			<manifest>
	            <attribute name="Main-Class" value="example.hibernate.CandidateManager" />
			</manifest>
		</jar>
	</target>
	
	<target name="runHibernateExample" depends="compile, copymetafiles"
	description="Build and run Hibernate only application">
		<java fork="true" classname="example.hibernate.CandidateManager" classpathref="project.classpath">
			<classpath path="${build.dir}"/>
		</java>
	</target>
	
	<!-- Tomcat Related Commands -->
    <target name="tomcat.deploy" depends="buildATSWar" description="Deploy application in Tomcat">
        <deploy url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"
                 war="${dist.dir}/${name}.war"/>
    </target>
	
	<target name="tomcat.undeploy" description="Undeploy Tomcat application">
		<undeploy url="${tomcat.manager.url}" 
				failOnError="false" 
				username="${tomcat.manager.username}" 
				password="${tomcat.manager.password}" 
				path="${deploy.context}"/>
	</target>
	
    <target name="tomcat.start" description="Start Tomcat application">
        <start url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="${deploy.context}"/>
    </target>

    <target name="tomcat.stop" description="Stop Tomcat application">
        <stop url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="${deploy.context}"/>
    </target>
	
</project>